export(opls)
importFrom(Rcpp, sourceCpp)
import(RcppArmadillo)
importFrom(abind,abind)
importFrom(colorRamps,matlab.like2)
importFrom(ellipse,ellipse)
importFrom(ggplot2,aes)
importFrom(ggplot2,aes_string)
importFrom(ggplot2,element_blank)
importFrom(ggplot2,element_line)
importFrom(ggplot2,element_rect)
importFrom(ggplot2,element_text)
importFrom(ggplot2,facet_grid)
importFrom(ggplot2,geom_bar)
importFrom(ggplot2,geom_hline)
importFrom(ggplot2,geom_line)
importFrom(ggplot2,geom_vline)
importFrom(ggplot2,geom_point)
importFrom(ggplot2,geom_polygon)
importFrom(ggplot2,geom_segment)
importFrom(ggplot2,ggplot)
importFrom(ggplot2,ggtitle, guides)
importFrom(ggplot2,labs)
importFrom(ggplot2,scale_alpha)
importFrom(ggplot2,scale_y_continuous)
importFrom(ggplot2,scale_fill_manual)
importFrom(ggplot2,scale_colour_gradientn)
importFrom(ggplot2,scale_colour_manual)
importFrom(ggplot2,scale_x_reverse)
importFrom(ggplot2,scale_x_continuous)
importFrom(ggplot2,scale_y_continuous)
importFrom(ggplot2,theme)
importFrom(ggplot2,theme_bw)
importFrom(ggplot2,xlab)
importFrom(ggplot2,ylab)
importFrom(ggrepel,geom_text_repel)
importFrom(ggrepel,geom_label_repel)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(graphics,matplot)
importFrom(graphics,matpoints)
importFrom(grDevices,colorRampPalette)
importFrom(methods,getSlots)
importFrom(methods, hasArg, is)
importFrom(methods,new)
importFrom(methods,representation)
importFrom(methods,setClass)
importFrom(parallel, detectCores)
import(plotly)
importFrom(plyr,ddply)
importFrom(pROC,multiclass.roc)
importFrom(pROC,roc)
importFrom(ptw,asysm)
importFrom(RColorBrewer,brewer.pal)
import(RcppEigen)
importFrom(reshape2,melt)
importFrom(scales, breaks_pretty)
importFrom(signal, sgolayfilt)
importFrom("stats", "approxfun", "ccf")
importFrom(stats, as.formula)
importFrom(stats,cov)
importFrom("stats", "cor", "median", "lm")
importFrom(stats,sd)
importFrom("utils", "combn")
importFrom(stats,var)
importFrom(stats,quantile)
importFrom(utils,methods)
importFrom("stats", "kruskal.test", 'pf', "p.adjust", "t.test")

exportPattern("^[[:alpha:]]+")
importFrom(Rcpp, evalCpp)
useDynLib(metabom8, .registration = TRUE)


